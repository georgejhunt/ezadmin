#!/bin/sh -x
# tinycore script to partition, and load the OS for XSCE

# first look for command line flags 
EFI=`grep -w efi /proc/cmdline`
MBR=`grep -w mbr /proc/cmdline`
i686=`grep -w i686 /proc/cmdline`
x86_64=`grep -w x86_64 /proc/cmdline`
VMLINUZ="vmlinuz-3.17.6-200.fc20.i686+PAE"
INITRAMFS="initramfs-3.17.6-200.fc20.i686+PAE"
#installdir=$(cd `dirname ${0}`; pwd)
curdir=`pwd`

# wipe out the partition table
#if [ -d /mnt/sdb1/tce ];then
#	dd ip=/dev/zero of=/dev/sda bs=512 count=1
#fi
if [ ! -z $MBR ]; then
cat << EOF | fdisk /dev/sda
d
1
d
2
d
3
d
4
n
p
1

+500M
n
p
2

+5G
n
p
3


a
1
t
1
b
w
EOF
else
cat << EOF | gdisk /dev/sda
d
1
d
2
d
3
d
4
n
1

+500M
ef00
n
2

+5G
8300
n
3


8300
w
y
EOF
fi
partprobe /dev/sda
until [ -e /dev/sda1 ]; do sleep .25; done
mkdosfs -F 32 -n boot /dev/sda1
mkfs.ext4 -L rootfs /dev/sda2
mkfs.ext4 -L library /dev/sda3

mount /dev/sda1 /mnt/sda1
mount /dev/sda2 /mnt/sda2
mount /dev/sda3 /mnt/sda3

# create the mbr directory framework
#  mkdir -p /mnt/sda1/extlinux
#  extlinux --install /mnt/sda1/extlinux
  # installing mbr does not affect uefi boot, because uefi doesn't use it 
#  dd if=/usr/local/share/syslinux/mbr.bin of=/dev/sda bs=440 count=1

# do the things based on machine width
if [ ! -z "$i686" ];then
#  cp /mnt/sdb1/target/i686/vmlinuz /mnt/sda1/
#  cp /mnt/sdb1/target/i686/initrd.img /mnt/sda1/
  cd /mnt/sda2/
  tar xf /mnt/sdb1/target/i686/i686fc20rootfs.tgz
  cd $curdir
fi

if [ ! -z "$x86_64" ];then
#  cp /mnt/sdb1/target/x86_64/vmlinuz /mnt/sda1/
#  cp /mnt/sdb1/target/x86_64/initrd.img /mnt/sda1/
  cd /mnt/sda2/
  tar xf /mnt/sdb1/target/x86_64/x86_64fc20rootfs.tgz
  cd $curdir 
fi

# following commented out but saved if need to go grub -> selinux again
#cp /mnt/sdb1/target/extlinux.conf /mnt/sda1/extlinux/extlinux.conf
#cp /usr/local/share/syslinux/menu.c32 /mnt/sda1/extlinux/

#create mount points for the partitions
mkdir -p /mnt/sda2/boot/efi
mkdir -p /mnt/sda2/library

# create a fstab
cat << EOF > /mnt/sda2/etc/fstab
/dev/sda2	/	ext4	defaults	0	1
/dev/sda1	/boot/efi	ext4	defaults,nofail	0	0
/dev/sda3	/library	ext4	defaults	0	2
EOF

grub-install --boot-directory=/mnt/sda1/boot /dev/sda
cp /mnt/sdb1/target/grub.cfg /mnt/sda1/boot/grub/grub.cfg
mkdir -p /mnt/sda1/EFI
mkdir /home/tc/img
mount /mnt/sdb1/target/x86_64/efiboot.img /home/tc/img
cp -r /home/tc/img/* /mnt/sda1/EFI/

# make symbolic links for the kernel, and initramfs
kernel=`find /mnt/sda2/boot | grep vmlinuz-3`
ln -sf /mnt/sda2/boot/$kernel /mnt/sda2/boot/vmlinuz

initrd=`find /mnt/sda2/boot | grep initramfs-3`
ln -sf /mnt/sda2/boot/$initrd /mnt/sda2/boot/initramfs

